#!/usr/bin/env python
import random
import time
import RPi.GPIO as GPIO

# led-flicker.py
# Simulates "flickering" of a LED with the intent of simulating
# a fireplace/bonfire, it is done by running an endless loop while
# alternating the intensity of the light at a high rate.
# For realism, the intensity is generated by selecting a random
# number between two close values on a scale from 0 to 100,
# the "pause" is also set by specifying a ver small number in
# seconds to add more realism.

# For more information on GPIO.BOARD vs GPIO.BCM (Stack Overflow):
# https://goo.gl/vdWmjs
GPIO.setmode(GPIO.BOARD)
# Suggestion: A red or yellow led would add more realism.
# Setup the magic PIN and mode.
PIN = 40
GPIO.setup(PIN, GPIO.OUT)
# PWM = Power Management, Set up this LED with 100Hz
led = GPIO.PWM(PIN, 100)
# Turn on the light: (0=No light, 100=Full intensity)
led.start(0)
# While the "run" variable is true, the led will flicker..
run = True
try:
    while run:
        # ChangeDutyCycle changes the intensity of the light, must be a number
        # between 0 and 100, in this case, we "vary" the intensity to a number
        # between 10 and 50 in order to simulate a fickering effect..
        led.ChangeDutyCycle(random.randint(10, 50))
        # Sleep for a random interval, to give the flickering a more "real"
        # look, the division by 9 just makes the number given by random()
        # a bit smaller, and it is an arbitrary number.
        time.sleep(random.random() / 9)
except KeyboardInterrupt:
    print('Exit Requested..')
    run = False
finally:
    # These are suggested to be used by the GPIO documentation.
    led.stop()
    GPIO.cleanup()
